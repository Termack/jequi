//go:build ignore

package main

import (
	"go/format"
	"log"
	"os"
)

func main() {

	genImports("plugin.go", "main", os.Args[1])
}

func genImports(file, pack, module string) {
	outs := header + "package " + pack + "\n\n" + "import ("

	outs += "\n"
	outs += `handler "` + module + `"` + "\n"
	outs += `"github.com/jequi_go"` + "\n"
	outs += ")\n"

	outs += `
func handleResponse(r jequi_go.Response){
	handler.HandleResponse(r)
}
	`

	if err := formatAndWrite(file, outs); err != nil {
		log.Fatalf("Failed to format and write: %q", err)
	}
}

func formatAndWrite(file string, data string) error {
	res, err := format.Source([]byte(data))
	if err != nil {
		return err
	}

	if err = os.WriteFile(file, res, 0644); err != nil {
		return err
	}
	return nil
}

const (
	header = "// generated by generate.go; DO NOT EDIT\n\n"
)
